name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: .exe
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: ""
          - os: macos-latest
            target: aarch64-apple-darwin
            suffix: ""

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifacts
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          BINARY_NAME=git-branch-cleaner${{ matrix.suffix }}
          VERSION=${GITHUB_REF_NAME:-v0.1.0}
          ARTIFACT_NAME=git-branch-cleaner-${VERSION}-${{ matrix.target }}${{ matrix.suffix }}
          cp $BINARY_NAME $ARTIFACT_NAME
          echo "ARTIFACT=$ARTIFACT_NAME" >> $GITHUB_ENV

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: target/${{ matrix.target }}/release/${{ env.ARTIFACT }}
          if-no-files-found: error

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: "*/*"
          draft: false
          prerelease: false
          generate_release_notes: true
